<?xml version="1.0" encoding="UTF-8"?>
<con:restMockAction id="726d9607-d507-4c87-930f-ed674247a767" method="GET" name="search" resourcePath="/search" xmlns:con="http://eviware.com/soapui/config">
  <con:settings>
    <con:setting id="92956b11-db13-4f2a-90f3-f11bc6a1950bfileName">search</con:setting>
    <con:setting id="726d9607-d507-4c87-930f-ed674247a767fileName">search</con:setting>
  </con:settings>
  <con:defaultResponse>Search Response</con:defaultResponse>
  <con:dispatchStyle>SCRIPT</con:dispatchStyle>
  <con:dispatchConfig/>
  <con:dispatchPath>import java.net.URLDecoder;
def queryString = mockRequest.getRequest().getQueryString()
if (!queryString) {
    return "Missing required query parameters"
}

String[] fields = queryString.split("&amp;");
String[] kv;

HashMap&lt;String, String> params = new HashMap&lt;String, String>()
for (int i = 0; i &lt; fields.length; ++i){
    kv = fields[i].split("=");
    if (2 == kv.length)
     params.put(kv[0], kv[1]); 
}

def sessionid = params.get("sessionid")

// check
if( !context.hasProperty( sessionid ))
 return "Invalid Session Id Fault"

def searchstring = URLDecoder.decode(params.get("searchstring"), "UTF-8")

if (searchstring == "all") 
 return "WildCard Response"
else if (searchstring == "Item 1") 
 return "Item 1 Response"
else if (searchstring == "Item 2") 
 return "Item 2 Response"
else if (searchstring == "Item 3") 
 return "Item 3 Response"
else if (searchstring == "Item 4") 
 return "Item 3 Response"
else if (searchstring == "Item 5") 
 return "Item 5 Response"
else
return "Unknown Response" 
	


return "Search Response"</con:dispatchPath>
  <con:dispatchXPath/>
  <con:parameterDispatcherRuleContainer/>
  <con:routeScript/>
  <con:response dataSource="" httpResponseStatus="200" id="41e68c78-6373-4c24-aaf9-80d73863f033" mediaType="application/json" name="Search Response">
    <con:settings/>
    <con:responseContent>{
  "result": {
    "item": [
      {
        "id": "1",
        "description": "One handy protocol droid.",
        "price": "1"
      },
      {
        "id": "2",
        "description": "Item nr 2",
        "price": "2"
      },
      {
        "id": "3",
        "description": "Item nr 3",
        "price": "3"
      },
      {
        "id": "4",
        "description": "${item4description}",
        "price": "4"
      },
      {
        "id": "5",
        "description": "Item nr 5",
        "price": "5"
      }
    ]
  }
}</con:responseContent>
  </con:response>
  <con:response dataSource="" httpResponseStatus="200" id="a0e3d208-12e2-4cc8-af24-bd1b7e9777be" name="Invalid Session Id Fault">
    <con:settings/>
    <con:responseContent>{"Failed" : "Invalid Session Id"}</con:responseContent>
  </con:response>
  <con:response dataSource="" httpResponseStatus="200" id="839b1eb8-84cb-4eb0-b460-fc9314814277" mediaType="application/json" name="Item 1 Response">
    <con:settings/>
    <con:responseContent>{
  "result": {
    "item": {
      "id": "Item 1",
      "description": "One handy protocol droid. This droid is fluent in over six million forms of communication and has a lovely golden color. Built by an enthusiast. Mindwiped only once. Can be carried on your back.",
      "price": "1"
    }
  }
}</con:responseContent>
  </con:response>
  <con:response dataSource="" httpResponseStatus="200" id="39d62289-cea0-47b5-ad53-def905c06b2a" mediaType="application/json" name="Item 2 Response">
    <con:settings/>
    <con:responseContent>{
  "result": {
    "item": {
      "id": "Item 2",
      "description": "Box of chocolate with several popular items. Covered in Glucose. Recommended safety distance when eating Spring Surprise, 10 feet.",
      "price": "1.99"
    }
  }
}</con:responseContent>
  </con:response>
  <con:response dataSource="" httpResponseStatus="200" id="1e1dbe4e-6c31-44df-b320-cb413dd95c48" mediaType="application/json" name="Item 3 Response">
    <con:settings/>
    <con:responseContent>{
  "result": {
    "item": {
      "id": "Item 3",
      "description": "One towel. Massively useful thing. Impress the strags with this amazing cloth!",
      "price": "2.99"
    }
  }
}</con:responseContent>
  </con:response>
  <con:response dataSource="" httpResponseStatus="200" id="d87ce05c-0341-4bd3-95c5-6de65f20f304" mediaType="application/json" name="Item 4 Response">
    <con:settings/>
    <con:responseContent>{
  "result": {
    "item": {
      "id": "Item 4",
      "description": "Ono-Sendai 7. The newest cowboy tech from Hosaka. Break the ICE with this conversation piece.",
      "price": "4.99"
    }
  }
}</con:responseContent>
  </con:response>
  <con:response dataSource="" httpResponseStatus="200" id="077ff1f8-4aa9-4c8b-80cd-d71c50b9f3ab" mediaType="application/json" name="Item 5 Response">
    <con:settings/>
    <con:responseContent>{
  "result": {
    "item": {
      "id": "Item 5",
      "description": "Ready! API. All your needs for API readiness",
      "price": "499"
    }
  }
}</con:responseContent>
  </con:response>
  <con:response dataSource="" httpResponseStatus="200" id="152c6680-6b2a-4be6-8462-f8b59e600d07" mediaType="application/json" name="Search Fault Response">
    <con:settings/>
    <con:responseContent>{"No Result" : "The search returned no items"}</con:responseContent>
  </con:response>
  <con:response dataSource="" httpResponseStatus="200" id="b106d12c-2a28-4e2b-a31b-6fc69c392554" mediaType="application/json" name="Unknown Response">
    <con:settings/>
    <con:responseContent>{ "Client" : "Unknown Search String" }</con:responseContent>
  </con:response>
  <con:response dataSource="" httpResponseStatus="200" id="0ce69a22-569f-4b65-bc61-819b91368da4" mediaType="application/json" name="WildCard Response">
    <con:settings/>
    <con:responseContent>{
  "result": {
    "item": [
      {
        "id": "1",
        "description": "One handy protocol droid.",
        "price": "1"
      },
      {
        "id": "2",
        "description": "Item nr 2",
        "price": "2"
      },
      {
        "id": "3",
        "description": "Item nr 3",
        "price": "3"
      },
      {
        "id": "4",
        "description": "${item4description}",
        "price": "4"
      },
      {
        "id": "5",
        "description": "Item nr 5",
        "price": "5"
      }
    ]
  }
}</con:responseContent>
  </con:response>
</con:restMockAction>
